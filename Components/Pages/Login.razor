@page "/"
@using BudgetTracker.Components.Layout
@using BudgetTracker.Models
@layout FirstLayout
@inject UserService UserService
@inject NavigationManager NavigationManager

<div class="d-flex justify-content-center align-items-center vh-100" style="background: linear-gradient(135deg, #1f4037, #99f2c8);">
    <div class="glass-card shadow-lg p-4" style="width: 100%; max-width: 400px;">
        <div class="text-center">
            <h4 class="text-white fw-bold mb-3">Welcome Back</h4>
            <p class="text-light">Enter your details to continue</p>
        </div>

        <!-- Username Field -->
        <div class="mb-4">
            <div class="input-group">
                <span class="input-group-text bg-transparent text-white border-0"><i class="bi bi-person"></i></span>
                <input type="text"
                       id="username"
                       class="form-control text-white bg-transparent border-0 border-bottom"
                       placeholder="Username"
                       @bind="LoginUsername" />
            </div>
        </div>

        <!-- Password Field -->
        <div class="mb-4">
            <div class="input-group">
                <span class="input-group-text bg-transparent text-white border-0"><i class="bi bi-lock"></i></span>
                <input type="password"
                       id="password"
                       class="form-control text-white bg-transparent border-0 border-bottom"
                       placeholder="Password"
                       @bind="LoginPassword" />
            </div>
        </div>

        <!-- Login Button -->
        <div class="d-grid mb-3">
            <button class="btn btn-gradient shadow-lg fw-bold" @onclick="LoginPage">Log In</button>
        </div>

        <!-- Registration Link -->
        <div class="text-center mt-3">
            <a href="/register" class="text-decoration-none text-light">Don't have an account? <strong>Register</strong></a>
        </div>

        <!-- Error Message -->
        @if (!string.IsNullOrEmpty(Message))
        {
            <div class="alert alert-danger mt-3 text-center" role="alert">
                @Message
            </div>
        }
    </div>
</div>

<style>
    /* Futuristic Glassmorphic Card */
    .glass-card {
        backdrop-filter: blur(15px);
        background: rgba(255, 255, 255, 0.15);
        border-radius: 15px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        padding: 20px;
    }

    /* Gradient Button */
    .btn-gradient {
        background: linear-gradient(90deg, #00c6ff, #0072ff);
        color: white;
        border: none;
        border-radius: 30px;
        padding: 12px;
        font-size: 1rem;
        transition: background 0.3s ease, transform 0.2s ease;
    }

    .btn-gradient:hover {
        background: linear-gradient(90deg, #0072ff, #00c6ff);
        transform: translateY(-2px);
    }

    /* Input Fields */
    .form-control {
        border-radius: 0;
        border-bottom: 2px solid rgba(255, 255, 255, 0.6);
        color: white;
        background: transparent;
        font-size: 1rem;
    }

    .form-control:focus {
        box-shadow: none;
        border-color: white;
    }

    .input-group-text {
        font-size: 1.25rem;
    }

    /* Body Background */
    body {
        font-family: 'Roboto', sans-serif;
        color: white;
    }
</style>

@code {
    private string LoginUsername = "";
    private string LoginPassword = "";
    private string Message = "";

    private List<User> Users = new();

    protected override void OnInitialized()
    {
        Users = UserService.fetchUsers();
    }

    private void LoginPage()
    {
        var user = Users.FirstOrDefault(a => a.username == LoginUsername);

        if (user != null && UserService.ValidatePassword(LoginPassword, user.password))
        {
            NavigationManager.NavigateTo("/dashboard");
            UserService.activeUsername = user?.username;
        }
        else
        {
            Message = "Invalid username or password.";
        }
    }
}
